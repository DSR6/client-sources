package com.alan.clients.module.impl.exploit.disabler;

import com.alan.clients.component.impl.player.PingSpoofComponent;
import com.alan.clients.event.Listener;
import com.alan.clients.event.annotations.EventLink;
import com.alan.clients.event.impl.motion.PreUpdateEvent;
import com.alan.clients.event.impl.packet.PacketSendEvent;
import com.alan.clients.module.impl.combat.KillAura;
import com.alan.clients.module.impl.exploit.Disabler;
import com.alan.clients.util.packet.PacketUtil;
import com.alan.clients.value.Mode;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import rip.vantage.commons.util.time.StopWatch;

import java.util.Collection;
import java.util.HashSet;

public class TestDisabler extends Mode<Disabler> {
    private final StopWatch stopWatch = new StopWatch();

    private final Collection<Packet<?>> packetCollection = new HashSet<>();

    public TestDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink
    public final Listener<PreUpdateEvent> onPreUpdate = event -> {
        PingSpoofComponent.spoof(400, false, true, true, true, false);

        if (this.packetCollection.isEmpty()) {
            return;
        }

        this.packetCollection.forEach(PacketUtil::send);
        this.packetCollection.clear();
    };

    @EventLink
    private final Listener<PacketSendEvent> packetSendEventListener = event -> {
        if (!this.getModule(KillAura.class).isEnabled()) {
            return;
        }

        if (event.getPacket() instanceof C0FPacketConfirmTransaction) {
            this.packetCollection.add(event.getPacket());
            event.setCancelled();
        }

    };

    @Override
    public void onDisable() {
        PingSpoofComponent.dispatch();
    }

}